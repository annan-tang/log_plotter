## cog
abc_refCog:
  data:
    - { log: abc_cogOut, column: [0-2] }
abst_genCog:
  data:
    - { log: abst_genCog, column: [0-2] }
st_originActCog:
  data:
    - { log: st_originActCog, column: [0-2] }
st_originRefCog:
  data:
    - { log: st_originRefCog, column: [0-2] }
abc_originActCog:
  data:
    - { log: abc_originActCog, column: [0-2] }
abc_originRefCog:
  data:
    - { log: abc_originRefCog, column: [0-2] }
abst_footActCog:
  data:
    - { log: abst_footFrameActCog, column: [0-2] }
abst_footGenCog:
  data:
    - { log: abst_footFrameGenCog, column: [0-2] }
## cog velocity
st_originActCogVel:
  data:
    - { log: st_originActCogVel, column: [0-2] }
st_originRefCogVel:
  data:
    - { log: st_originRefCogVel, column: [0-2] }
abc_originActCogVel:
  data:
    - { log: abc_originActCogVel, column: [0-2] }
abc_originRefCogVel:
  data:
    - { log: abc_originRefCogVel, column: [0-2] }
abst_footActCogVel:
  data:
    - { log: abst_footFrameActCogVel, column: [0-2] }
abst_genCogVel:
  data:
    - { log: abst_genCogVel, column: [0-2] } # old abc port?
## CP
abst_genEndCp:
  data:
    - { log: abst_genEndCp, column: [0-2] }
abst_genCp:
  data:
    - { log: abst_genCp, column: [0-2] }
## zmp
abst_nominalZmp:
  data:
    - { log: abst_nominalZmp, column: [0-2] }
abc_zmpOut:
  data:
    - { log: abc_zmpOut, column: [0-2] }
abc_refZmp:
  func: plot_add
  data:
    - { log: abc_zmpOut, column: [0-2] }
    - { log: abc_baseTformOut, column: [0-2] }
abst_genZmp:
  data:
    - { log: abst_genZmp, column: [0-2] }
abst_genZmpTf:
  func: plot_add
  data:
    - { log: abst_baseFrameGenZmp, column: [0-2] }
    - { log: abst_genBaseTform, column: [0-2] }
abst_actZmpTf:
  func: plot_add
  data:
    - { log: abst_baseFrameActZmp, column: [0-2] }
    - { log: abst_genBaseTform, column: [0-2] }
st_originActZmp:
  data:
    - { log: st_originActZmp, column: [0-2] }
st_originRefZmp:
  data:
    - { log: st_originRefZmp, column: [0-2] }
st_originNewZmp:
  data:
    - { log: st_originNewZmp, column: [0-2] }
abc_originActZmp:
  data:
    - { log: abc_originActZmp, column: [0-2] }
abc_originRefZmp:
  data:
    - { log: abc_originRefZmp, column: [0-2] }
abc_originNewZmp:
  data:
    - { log: abc_originNewZmp, column: [0-2] }
abst_footActZmp:
  data:
    - { log: abst_footFrameActZmp, column: [0-2] }
abst_footGenZmp:
  data:
    - { log: abst_footFrameGenZmp, column: [0-2] }
abst_footModZmp:
  data:
    - { log: abst_footFrameModZmp, column: [0-2] }
# root-link relative zmp
st_zmp:
  data:
    - { log: st_zmp, column: [0-2] }
abc_zmp:
  data:
    - { log: abc_zmp, column: [0-2] }
abst_zmp:
  data:
    - { log: abst_baseFrameActZmp, column: [0-2] }
# angular momentum
abst_genAngularMomentum:
  data:
    - { log: abst_genAngularMomentumRpy, column: [0-2] }
## force
sh_rfsensorOut:
  data:
    - { log: sh_rfsensorOut, column: [0-5] }
sh_lfsensorOut:
  data:
    - { log: sh_lfsensorOut, column: [0-5] }
sh_rhsensorOut:
  data:
    - { log: sh_rhsensorOut, column: [0-5] }
sh_lhsensorOut:
  data:
    - { log: sh_lhsensorOut, column: [0-5] }
RobotHardware0_rfsensor:
  data:
    - { log: RobotHardware0_rfsensor, column: [0-5] }
RobotHardware0_lfsensor:
  data:
    - { log: RobotHardware0_lfsensor, column: [0-5] }
RobotHardware0_rhsensor:
  data:
    - { log: RobotHardware0_rhsensor, column: [0-5] }
RobotHardware0_lhsensor:
  data:
    - { log: RobotHardware0_lhsensor, column: [0-5] }
rmfo_off_rfsensor:
  func: plot_inverse
  data:
    - { log: rmfo_off_rfsensor, column: [0-5] }
rmfo_off_lfsensor:
  func: plot_inverse
  data:
    - { log: rmfo_off_lfsensor, column: [0-5] }
rmfo_off_rhsensor:
  data:
    - { log: rmfo_off_rhsensor, column: [0-5] }
rmfo_off_lhsensor:
  data:
    - { log: rmfo_off_lhsensor, column: [0-5] }
st_ref_rfsensor:
  data:
    - { log: st_allRefWrench, column: [0-5] }
st_ref_lfsensor:
  data:
    - { log: st_allRefWrench, column: [6-11] }
st_ref_rhsensor:
  data:
    - { log: st_allRefWrench, column: [12-17] }
st_ref_lhsensor:
  data:
    - { log: st_allRefWrench, column: [18-23] }
abc_ref_rfsensor:
  data:
    - { log: abc_allRefWrench, column: [0-5] }
abc_ref_lfsensor:
  data:
    - { log: abc_allRefWrench, column: [6-11] }
abc_ref_rhsensor:
  data:
    - { log: abc_allRefWrench, column: [12-17] }
abc_ref_lhsensor:
  data:
    - { log: abc_allRefWrench, column: [18-23] }
abst_mod_rfsensor:
  data:
    - { log: abst_modWrenches, column: [0-5] }
abst_mod_lfsensor:
  data:
    - { log: abst_modWrenches, column: [6-11] }
abst_mod_rhsensor:
  data:
    - { log: abst_modWrenches, column: [12-17] }
abst_mod_lhsensor:
  data:
    - { log: abst_modWrenches, column: [18-23] }
abc_rfsensor:
  data:
    - { log: abc_rfsensor, column: [0-2] }
abc_lfsensor:
  data:
    - { log: abc_lfsensor, column: [0-2] }
# comp
st_rfcomp:
  func: plot_comp
  data:
    - { log: st_allEEComp, column: [0-5] }
st_lfcomp:
  func: plot_comp
  data:
    - { log: st_allEEComp, column: [6-11] }
st_rhcomp:
  func: plot_comp
  data:
    - { log: st_allEEComp, column: [12-17] }
st_lhcomp:
  func: plot_comp
  data:
    - { log: st_allEEComp, column: [18-23] }
abc_rfcomp:
  func: plot_comp
  data:
    - { log: abc_allEEComp, column: [0-5] }
abc_lfcomp:
  func: plot_comp
  data:
    - { log: abc_allEEComp, column: [6-11] }
abc_rhcomp:
  func: plot_comp
  data:
    - { log: abc_allEEComp, column: [12-17] }
abc_lhcomp:
  func: plot_comp
  data:
    - { log: abc_allEEComp, column: [18-23] }
abst_rfcomp:
  func: plot_comp
  data:
    - { log: abst_allEEComp, column: [0-5] }
abst_lfcomp:
  func: plot_comp
  data:
    - { log: abst_allEEComp, column: [6-11] }
abst_rhcomp:
  func: plot_comp
  data:
    - { log: abst_allEEComp, column: [12-17] }
abst_lhcomp:
  func: plot_comp
  data:
    - { log: abst_allEEComp, column: [18-23] }
# imu
imu_gsensor:
  data:
    - { log: RobotHardware0_gsensor, column: [0-2] }
imu_gyrometer:
  func: plot_rad2deg
  data:
    - { log: RobotHardware0_gyrometer, column: [0-2] }
# rl.rtc rpy
rl_controller_body_rpy:
  data:
    - { log: RLController_body_rpy, column: [0-2] }

# rpy
sh_baseRpyOut:
  func: plot_rad2deg
  data:
    - { log: sh_baseRpyOut, column: [0-2] }
st_actBaseRpy:
  func: plot_rad2deg
  data:
    - { log: st_actBaseRpy, column: [0-2] }
st_currentBaseRpy:
  func: plot_rad2deg
  data:
    - { log: st_currentBaseRpy, column: [0-2] }
abc_actBaseRpy:
  func: plot_rad2deg
  data:
    - { log: abc_actBaseRpy, column: [0-2] }
abc_currentBaseRpy:
  func: plot_rad2deg
  data:
    - { log: abc_currentBaseRpy, column: [0-2] }
abst_actBaseRpy:
  func: plot_rad2deg
  data:
    - { log: abst_actBaseRpy, column: [0-2] }
abst_currentBaseRpy:
  func: plot_rad2deg
  data:
    - { log: abst_currentBaseRpy, column: [0-2] }
kf_rpy:
  func: plot_rad2deg
  data:
    - { log: kf_rpy, column: [0-2] }
sh_baseRpyVel:
  func: plot_rad2deg_vel
  data:
    - { log: sh_baseRpyOut, column: [0-2] }
st_currentBaseRpyVel:
  func: plot_rad2deg_vel
  data:
    - { log: st_currentBaseRpy, column: [0-2] }
st_actBaseRpyVel:
  func: plot_rad2deg_vel
  data:
    - { log: st_actBaseRpy, column: [0-2] }
abc_currentBaseRpyVel:
  func: plot_rad2deg_vel
  data:
    - { log: abc_currentBaseRpy, column: [0-2] }
abc_actBaseRpyVel:
  func: plot_rad2deg_vel
  data:
    - { log: abc_actBaseRpy, column: [0-2] }
abst_currentBaseRpyVel:
  func: plot_rad2deg_vel
  data:
    - { log: abst_currentBaseRpy, column: [0-2] }
abst_actBaseRpyVel:
  func: plot_rad2deg_vel
  data:
    - { log: abst_actBaseRpy, column: [0-2] }
# pos
abc_basePos:
  data:
    - { log: abc_baseTformOut, column: [0-2] }
abst_basePos:
  data:
    - { log: abst_genBaseTform, column: [0-2] }
st_currentBasePos:
  data:
    - { log: st_currentBasePos, column: [0-2] }
abc_currentBasePos:
  data:
    - { log: abc_currentBasePos, column: [0-2] }
abst_currentBasePos:
  data:
    - { log: abst_currentBasePos, column: [0-2] }
# optional data
abc_contactStates:
  data:
    - { log: abc_contactStates, column: [0-3] }
abc_controlSwingSupportTime:
  data:
    - { log: abc_controlSwingSupportTime, column: [0-3] }
abst_genContactStates:
  data:
    - { log: abst_genContactStates, column: [0-3] }
abst_actContactStates:
  data:
    - { log: abst_actContactStates, column: [0-3] }
abst_controlSwingSupportTime:
  data:
    - { log: abst_genRemainTime, column: [0-3] }
# debug data
st_debugData:
  data:
    - { log: st_debugData, column:[0-3] }
abc_debugData:
  data:
    - { log: abc_debugData, column:[0-3] }
abst_debugData:
  data:
    - { log: abst_debugData, column:[0-3] }
# COP
sh_rfcop:
  data:
    - { log: sh_rfsensorOut, column: [0-5] }
  func: plot_COP
sh_lfcop:
  data:
    - { log: sh_lfsensorOut, column: [0-5] }
  func: plot_COP
st_rfcop:
  data:
    - { log: st_allRefWrench, column: [0-5] }
  func: plot_COP
st_lfcop:
  data:
    - { log: st_allRefWrench, column: [6-11] }
  func: plot_COP
abc_rfcop:
  data:
    - { log: abc_allRefWrench, column: [0-5] }
  func: plot_COP
abc_lfcop:
  data:
    - { log: abc_allRefWrench, column: [6-11] }
  func: plot_COP
abst_rfcop:
  data:
    - { log: abst_modWrenches, column: [0-5] }
  func: plot_COP
abst_lfcop:
  data:
    - { log: abst_modWrenches, column: [6-11] }
  func: plot_COP
rmfo_rfcop:
  data:
    - { log: rmfo_off_rfsensor, column: [0-5] }
  func: plot_COP
rmfo_lfcop:
  data:
    - { log: rmfo_off_lfsensor, column: [0-5] }
  func: plot_COP
sh_rhcop:
  data:
    - { log: sh_rhsensorOut, column: [0-5] }
  func: plot_COP
sh_lhcop:
  data:
    - { log: sh_lhsensorOut, column: [0-5] }
  func: plot_COP
st_rhcop:
  data:
    - { log: st_allRefWrench, column: [12-17] }
  func: plot_COP
st_lhcop:
  data:
    - { log: st_allRefWrench, column: [17-23] }
  func: plot_COP
abc_rhcop:
  data:
    - { log: abc_allRefWrench, column: [12-17] }
  func: plot_COP
abc_lhcop:
  data:
    - { log: abc_allRefWrench, column: [17-23] }
  func: plot_COP
abst_rhcop:
  data:
    - { log: abst_modWrenches, column: [12-17] }
  func: plot_COP
abst_lhcop:
  data:
    - { log: abst_modWrenches, column: [17-23] }
  func: plot_COP
rmfo_rhcop:
  data:
    - { log: rmfo_off_rhsensor, column: [0-5] }
  func: plot_COP
rmfo_lhcop:
  data:
    - { log: rmfo_off_lhsensor, column: [0-5] }
  func: plot_COP
# time
time:
  func: plot_time
  data:
    - { log: sh_qOut, column: [0]}
